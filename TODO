Parsing:
  Syntactic:
  ✔ Refactor and trim down syntax @done(19-11-28 13:37)
  ✔ Remove fixed @done(19-11-28 13:37)
  ☐ Add smart contract filter
  ✔ Add generic filter @done(19-11-28 13:37)
  ✔ Add export statements @done(19-11-28 13:37)
  Semantic parsing:
    Variables:
    ✔ Variable name existence @done(19-11-28 15:39)
    ☐ Add smart contract variables
    Filter:
    ✔ Proper filter nesting @done(19-11-28 15:39)
    ✔ Verify block filter definition @done(19-11-28 20:44)
    ✔ Verify transaction filter definition @done(19-11-28 21:02)
    ✔ Verify log entry filter definition @done(19-11-28 21:05)
    ✔ Verify generic filter definition @done(19-11-29 15:00)
    ☐ Add smart contract filter
    Emit:
    ☐ Verify csv row emit
    ☐ Verify log line emit
    ☐ Verify xes emit
    Statements:
    ☐ Library lookup for method invocation
    ☐ Literal checking
    ☐ Variable type compatibility
    ☐ Literal type compatibility
    ☐ Bytes and int precision compatibility

Building:
☐ Literal building
☐ Generic filter specification
☐ Smart contract filter specification
  
Extractor:
☐ Value casting from Web3j / JSON RPC responses to values
☐ Implement smart contract filter

Library:
☐ Add bit mapping
☐ Add value dictionary
☐ Add utility functionality for types
☐ Add null / empty constructor

Writers:
☐ Check that if a new block is started and the block number is already known, data for this blocknumber will be overwritten

Generator:
☐ Transformation for value dictionary
☐ Transformation for bit mapping

Configuration:
☐ Output folder config
☐ Client connections config