Parsing:
  Syntactic:
  ✔ Refactor and trim down syntax @done(19-11-28 13:37)
  ✔ Remove fixed @done(19-11-28 13:37)
  ✔ Add smart contract filter @done(19-12-10 09:49)
  ✔ Add generic filter @done(19-11-28 13:37)
  ✔ Add export statements @done(19-11-28 13:37)
  Semantic parsing:
    Variables:
    ✔ Variable name existence @done(19-11-28 15:39)
    ✔ Add smart contract variables @done(19-12-10 09:49)
    Filter:
    ✔ Proper filter nesting @done(19-11-28 15:39)
    ✔ Verify block filter definition @done(19-11-28 20:44)
    ✔ Verify transaction filter definition @done(19-11-28 21:02)
    ✔ Verify log entry filter definition @done(19-11-28 21:05)
    ✔ Verify generic filter definition @done(19-11-29 15:00)
    ✔ Add smart contract filter @done(19-12-10 09:49)
    Emit:
    ✔ Verify csv row emit (column names must be unique) @done(19-11-29 16:29)
    ✔ Verify xes emit (attribute names must be unique) @done(19-11-29 16:52)
    Statements:
    ✔ Variable type compatibility @done(19-11-30 07:54)
    ✔ Literal type compatibility @done(19-11-30 07:54)
    ✔ Library lookup for method invocation @done(19-11-30 07:54)
    ☐ empty arrays are initiated with '[]', but the analyzer does not allow for empty arrays
    ☐ update grammar to allow only int-variables in the code and solidity int-types only in filters
    ☐ block filter should only allow integer literals for block numbers, and enforce constraints: from <= to && from > 0 && to > 0
    ☐ GenericFilter: right handside of IN operator should only be array variables or literals
    ☐ check parsing of address literals for smart contract filters
    ☐ check definition of methodcalls in smart contract filters
    

Building:
  ✔ Build program @done(19-12-03 08:58)
  ✔ Build block filter @done(19-12-03 08:59)
  ✔ Build transaction filter @done(19-12-03 08:59)
  ✔ Build log entry filter @done(19-12-03 08:59)
  ✔ Build generic filter @done(19-12-03 17:12)
  ✔ Build log line export @done(19-12-03 18:12)
  ✔ Build csv row export @done(19-12-03 18:12)
  ✔ Build xes event export @done(19-12-03 18:12)
  ✔ Build xes trace export @done(19-12-03 18:12)
  ✔ Build statements @done(19-12-04 10:27)
  ✔ Smart contract filter specification @done(19-12-10 13:04)
  
Extractor:
  ✔ Implement smart contract filter @done(19-12-13 15:11)

Library:
  ✔ Add bit mapping @done(19-12-04 23:20)
  ✔ Add value dictionary @done(19-12-04 15:16)
  ☐ Add concat
  ☐ Add utility functionality
  ☐ Add null / empty constructor
  ☐ Add casts

Generator:
  ✔ Transformation for value dictionary @done(19-12-13 15:11)
  ✔ Transformation for bit mapping @done(19-12-13 15:11)

Writers:
  ☐ Check that if a new block is started and the block number is already known, data for this blocknumber will be overwritten.
  ☐ Introduce filename specification for emitting log line
  ☐ Set default folder and url

Configuration:
  ☐ Automate output folder config
  ☐ Automate client connections config

Open issues:
  ☐ currently array types are badly supported, e.g., for defining how to convert them into xes attributes
  ☐ add for loop for arrays

Testing: 
  ☐ Why does the build process for the CryptoKitties example work, when the kitties array is incorrectly initialized with {0}
  ☐ The use of boolean expressions within the generic filters needs to be investigated.

Licenses:
  ☐ check if logback is really needed